The ``7-base_geometry`` module
----------------------------
----------------------------

Using ``BaseGeometry`` class
-----------------------
-----------------------

First import ``BaseGeometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Now use it:

--- Without possible error ---------------------------------

    >>> bg = BaseGeometry()

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("age", 25)

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("my_int")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("my_int", "12")
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", 12.5)
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", float('nan'))
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", [12.5, 4, 8])
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", (12, 5))
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", -12)
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("my_int", -5)
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("my_int", True)
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", {2, 4})
    Traceback (most recent call last):
    TypeError: my_int must be an integer
